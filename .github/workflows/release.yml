name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          cache: true
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Install FPM and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm build-essential debhelper devscripts
          gem install fpm

      - name: Build binary
        run: |
          go build -v -o tg-forward ./cmd/tgforward/main.go

      - name: Create config files
        run: |
          # 创建默认的 config.yaml
          cat > config.yaml << 'EOF'
          telegram:
            token: ""
            chat_ids: []
          
          dingtalk:
            webhook: ""
            secret: ""
            at_mobiles: []
            at_all: false
          
          queue:
            type: "leveldb"
            path: "/var/lib/tg-forward/queue"
          
          log:
            level: "info"
            file_path: "/var/log/tg-forward/app.log"
          
          metrics:
            enabled: true
            interval: 60
            output_file: "/var/lib/tg-forward/metrics.json"
            http:
              enabled: true
              port: 9090
              path: "/metrics"
          EOF
          
          # 创建默认的 env.yaml
          cat > env.yaml << 'EOF'
          telegram:
            token: ""
            chat_ids: []
          
          dingtalk:
            webhook: ""
            secret: ""
            at_mobiles: []
            at_all: false
          
          queue:
            type: "leveldb"
            path: "/var/lib/tg-forward/queue"
          
          log:
            level: "info"
            file_path: "/var/log/tg-forward/app.log"
          
          metrics:
            enabled: true
            interval: 60
            output_file: "/var/lib/tg-forward/metrics.json"
            http:
              enabled: true
              port: 9090
              path: "/metrics"
          EOF

      - name: Create systemd service
        run: |
          cat > tg-forward.service << 'EOF'
          [Unit]
          Description=Telegram Forward Service
          After=network.target
          
          [Service]
          Type=simple
          User=tg-forward
          ExecStart=/usr/bin/tg-forward
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
          EOF

      - name: Prepare package files
        run: |
          # 创建临时目录结构
          mkdir -p ./package-root/usr/bin
          mkdir -p ./package-root/etc/tg-forward
          mkdir -p ./package-root/lib/systemd/system
          mkdir -p ./package-root/var/lib/tg-forward
          mkdir -p ./package-root/var/log/tg-forward
          
          # 复制文件到临时目录
          cp tg-forward ./package-root/usr/bin/
          cp config.yaml ./package-root/etc/tg-forward/
          cp env.yaml ./package-root/etc/tg-forward/
          cp tg-forward.service ./package-root/lib/systemd/system/

      - name: Create after-install script
        run: |
          cat > after-install.sh << 'EOF'
          #!/bin/sh
          set -e
          
          # 创建用户和组
          if ! getent group tg-forward >/dev/null; then
              groupadd -r tg-forward
          fi
          if ! getent passwd tg-forward >/dev/null; then
              useradd -r -g tg-forward -s /sbin/nologin -d /var/lib/tg-forward tg-forward
          fi
          
          # 设置目录权限
          chown -R tg-forward:tg-forward /var/lib/tg-forward
          chown -R tg-forward:tg-forward /var/log/tg-forward
          
          # 重新加载 systemd
          systemctl daemon-reload
          
          # 启用服务
          systemctl enable tg-forward
          systemctl start tg-forward || true
          EOF
          
          chmod +x after-install.sh

      - name: Create before-remove script
        run: |
          cat > before-remove.sh << 'EOF'
          #!/bin/sh
          set -e
          
          # 停止服务
          systemctl stop tg-forward || true
          systemctl disable tg-forward || true
          EOF
          
          chmod +x before-remove.sh

      - name: Build packages with FPM
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          
          # 构建 RPM 包
          fpm -s dir -t rpm \
            -p "tg-forward-${VERSION}-1.x86_64.rpm" \
            --name tg-forward \
            --version "${VERSION}" \
            --architecture x86_64 \
            --description "Telegram Forward Service" \
            --url "https://github.com/user/tg-forward-to-xx" \
            --maintainer "TG Forward Team <team@example.com>" \
            --vendor "TG Forward Team" \
            --license "MIT" \
            --depends systemd \
            --after-install after-install.sh \
            --before-remove before-remove.sh \
            --directories /var/lib/tg-forward \
            --directories /var/log/tg-forward \
            --config-files /etc/tg-forward/config.yaml \
            --config-files /etc/tg-forward/env.yaml \
            -C ./package-root .
          
          # 构建 DEB 包
          fpm -s dir -t deb \
            -p "tg-forward_${VERSION}_amd64.deb" \
            --name tg-forward \
            --version "${VERSION}" \
            --architecture amd64 \
            --description "Telegram Forward Service" \
            --url "https://github.com/user/tg-forward-to-xx" \
            --maintainer "TG Forward Team <team@example.com>" \
            --vendor "TG Forward Team" \
            --license "MIT" \
            --depends systemd \
            --after-install after-install.sh \
            --before-remove before-remove.sh \
            --directories /var/lib/tg-forward \
            --directories /var/log/tg-forward \
            --config-files /etc/tg-forward/config.yaml \
            --config-files /etc/tg-forward/env.yaml \
            -C ./package-root .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            tg-forward-*.rpm
            tg-forward_*.deb
          draft: false
          prerelease: false
          generate_release_notes: true 